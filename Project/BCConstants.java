/* Generated By:JavaCC: Do not edit this line. BCConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface BCConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LBRACKET = 7;
  /** RegularExpression Id. */
  int RBRACKET = 8;
  /** RegularExpression Id. */
  int LBRACE = 9;
  /** RegularExpression Id. */
  int RBRACE = 10;
  /** RegularExpression Id. */
  int LPAREN = 11;
  /** RegularExpression Id. */
  int RPAREN = 12;
  /** RegularExpression Id. */
  int COMMA = 13;
  /** RegularExpression Id. */
  int DOT = 14;
  /** RegularExpression Id. */
  int QUOTMARK = 15;
  /** RegularExpression Id. */
  int STRING = 16;
  /** RegularExpression Id. */
  int DIGIT = 17;
  /** RegularExpression Id. */
  int NUMBER = 18;
  /** RegularExpression Id. */
  int NULL = 19;
  /** RegularExpression Id. */
  int COLON = 20;
  /** RegularExpression Id. */
  int SEMICOLON = 21;
  /** RegularExpression Id. */
  int IF = 22;
  /** RegularExpression Id. */
  int ELSE = 23;
  /** RegularExpression Id. */
  int DEFINE = 24;
  /** RegularExpression Id. */
  int WHILE = 25;
  /** RegularExpression Id. */
  int FOR = 26;
  /** RegularExpression Id. */
  int BREAK = 27;
  /** RegularExpression Id. */
  int CONTINUE = 28;
  /** RegularExpression Id. */
  int QUIT = 29;
  /** RegularExpression Id. */
  int PRINT = 30;
  /** RegularExpression Id. */
  int IBASE = 31;
  /** RegularExpression Id. */
  int OBASE = 32;
  /** RegularExpression Id. */
  int SCALE = 33;
  /** RegularExpression Id. */
  int LAST = 34;
  /** RegularExpression Id. */
  int ID = 35;
  /** RegularExpression Id. */
  int PLUS = 36;
  /** RegularExpression Id. */
  int MINUS = 37;
  /** RegularExpression Id. */
  int MUL = 38;
  /** RegularExpression Id. */
  int DIV = 39;
  /** RegularExpression Id. */
  int MOD = 40;
  /** RegularExpression Id. */
  int OR = 41;
  /** RegularExpression Id. */
  int AND = 42;
  /** RegularExpression Id. */
  int INC = 43;
  /** RegularExpression Id. */
  int DEC = 44;
  /** RegularExpression Id. */
  int POW = 45;
  /** RegularExpression Id. */
  int ASSIGN = 46;
  /** RegularExpression Id. */
  int PLUSASSIGN = 47;
  /** RegularExpression Id. */
  int MINUSASSIGN = 48;
  /** RegularExpression Id. */
  int MULSASSIGN = 49;
  /** RegularExpression Id. */
  int DIVASSIGN = 50;
  /** RegularExpression Id. */
  int MODASSIGN = 51;
  /** RegularExpression Id. */
  int POWASSIGN = 52;
  /** RegularExpression Id. */
  int EQUALS = 53;
  /** RegularExpression Id. */
  int GREATEREQUAL = 54;
  /** RegularExpression Id. */
  int LESSEREQUAL = 55;
  /** RegularExpression Id. */
  int NOTEQUAL = 56;
  /** RegularExpression Id. */
  int GREATER = 57;
  /** RegularExpression Id. */
  int LESSER = 58;
  /** RegularExpression Id. */
  int NOT = 59;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "LBRACKET",
    "RBRACKET",
    "LBRACE",
    "RBRACE",
    "LPAREN",
    "RPAREN",
    "COMMA",
    "DOT",
    "\"\\\"\"",
    "STRING",
    "DIGIT",
    "NUMBER",
    "NULL",
    "COLON",
    "SEMICOLON",
    "IF",
    "ELSE",
    "DEFINE",
    "WHILE",
    "FOR",
    "BREAK",
    "CONTINUE",
    "QUIT",
    "PRINT",
    "IBASE",
    "OBASE",
    "SCALE",
    "LAST",
    "ID",
    "PLUS",
    "MINUS",
    "MUL",
    "DIV",
    "MOD",
    "OR",
    "AND",
    "INC",
    "DEC",
    "POW",
    "ASSIGN",
    "PLUSASSIGN",
    "MINUSASSIGN",
    "MULSASSIGN",
    "DIVASSIGN",
    "MODASSIGN",
    "POWASSIGN",
    "EQUALS",
    "GREATEREQUAL",
    "LESSEREQUAL",
    "NOTEQUAL",
    "GREATER",
    "LESSER",
    "NOT",
  };

}
